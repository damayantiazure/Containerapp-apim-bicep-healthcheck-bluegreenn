# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
#- master

pool:
  vmImage: ubuntu-latest
variables:
 resourceGroupName: "APIM-DEVOPS"
 location: "eastus"
 APP_NAME: "solar201"
 APP_ENV: "dev"  
 imageName: "compliancewebapi"
 tag: "$(Build.BuildId)"
 uamiName: "$(APP_NAME)-uami-$(APP_ENV)"
 acaEnvName: "$(APP_NAME)-appenv-$(APP_ENV)"
 appInsightName: "$(APP_NAME)-appinsights-$(APP_ENV)"
 registry: "$(APP_NAME)contregistry$(APP_ENV).azurecr.io"
 imageRepository: "compliancewebapi"
 ComplianceWebApi_Path: "/src/WebApis/ComplianceWebApi/"
 dockerfilePath: "src/WebApis/ComplianceWebApi/Dockerfile"


steps:
# Create Core Infra stucture
# - task: AzureCLI@2
#   displayName: Create Core Infrastructure
#   inputs:
#     azureSubscription: 'masterconnection'
#     scriptType: 'bash'
#     scriptLocation: 'scriptPath'
#     scriptPath: 'Infrastructure/Platform/create-core-infra.sh'

# - task: AzureCLI@2
#   displayName: Build docker image for ComplianceWebApi and push to Azure container registry
#   inputs:
#     azureSubscription: 'masterconnection'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
     
#       echo "Login to Azure Container Registry"
#       accessToken=$(az acr login --name $(registry) --expose-token --output tsv --query accessToken)
#       docker login $(registry) --username 00000000-0000-0000-0000-000000000000 --password $accessToken
      
#       echo "Building Images with Tag '${imageName}:${tag}'"
#       docker build -t $(registry)/$(imageName):$(tag) -f ./src/WebApis/ComplianceWebApi/Dockerfile .
      
#       echo "Pushing to '$registry'"
#       docker push $(registry)/$(imageName):$(tag)
# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'masterconnection'
#     scriptType: 'bash'
#     scriptLocation: 'scriptPath'
#     scriptPath: 'Infrastructure/Containers/deploy.sh '
    
#   env:
#    resourceGroupName: $resourceGroupName
#    location: $location
#    APP_NAME: $APP_NAME
#    acaEnvName: $APP_ENV
#    tagName: $tag
#    imageName: $imageName
#    containerRegistryName: $registry
#    uamiName: $uamiName
#    appInsightName: $appInsightName

- task: AzureCLI@2
  inputs:
    azureSubscription: 'masterconnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az group create --name $(resourceGroupName) --location $(location)
      az deployment group create --resource-group $(resourceGroupName) --template-file 'Infrastructure/Containers/app.bicep' --parameters location=$(location) imageName=$(imageName) tagName=$($tag) containerRegistryName=$(registry) acaEnvName=$(acaEnvName) uamiName=$(uamiName) appInsightName=$(appInsightName)
      



      

 
   


            




       






